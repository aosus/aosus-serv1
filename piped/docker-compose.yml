version: "3"

networks:
  default:
  web:
    external: true

services:
  pipedfrontend:
    image: 1337kavin/piped-frontend:latest
    restart: always
    depends_on:
      - piped
    entrypoint: ash -c 'sed -i s/pipedapi.kavin.rocks/api.piped.aosus.org/g /usr/share/nginx/html/assets/* && /docker-entrypoint.sh && nginx -g "daemon off;"'
    networks:
      web:

  piped-proxy:
    image: 1337kavin/piped-proxy:latest
    container_name: piped-proxy
    restart: always
    environment:
      - UDS=1
    volumes:
      - piped-proxy:/app/socket

  piped:
    image: 1337kavin/piped:latest
    restart: always
    volumes:
      - /home/ubuntu/piped/config/config.properties:/app/config.properties:ro
    depends_on:
      - postgres
      
  nginx:
    image: nginx:mainline-alpine
    restart: always
    container_name: piped-nginx
    environment:
      - "VIRTUAL_HOST=piped.aosus.org,proxy.piped.aosus.org,api.piped.aosus.org"
      - "LETSENCRYPT_HOST=piped.aosus.org,proxy.piped.aosus.org,api.piped.aosus.org"
      - VIRTUAL_PORT=80
    volumes:
      - /home/ubuntu/piped/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - /home/ubuntu/piped/config/pipedapi.conf:/etc/nginx/conf.d/pipedapi.conf:ro
      - /home/ubuntu/piped/config/pipedproxy.conf:/etc/nginx/conf.d/pipedproxy.conf:ro
      - /home/ubuntu/piped/config/pipedfrontend.conf:/etc/nginx/conf.d/pipedfrontend.conf:ro
      - /home/ubuntu/piped/config/ytproxy.conf:/etc/nginx/snippets/ytproxy.conf:ro
      - piped-proxy:/var/run/ytproxy
    depends_on:
      - piped
      - piped-proxy
      - pipedfrontend
    networks:
      - default
      - web

  postgres:
    image: postgres:14-alpine
    restart: always
    volumes:
      - /home/ubuntu/piped/postgresql:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=piped
      - POSTGRES_USER=piped
      - POSTGRES_PASSWORD

volumes:
  piped-proxy: null
