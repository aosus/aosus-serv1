version: '3.3'
networks:
  web:
    external: true
  default:
    enable_ipv6: true

services:
  nitter:
    image: docker.io/zedeus/nitter:latest-arm64@sha256:69d0c220a12157ca20487c6a286892124df5e29a0f643002d9e9190cd38a257b
    restart: always
    container_name: nitter
    depends_on:
      - redis
    configs:
      - source: nitter
        target: /src/nitter.conf
    volumes:
      - /home/ubuntu/nitter/sessions.jsonl:/src/sessions.jsonl:Z,ro
    networks:
      default:
    healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:8080/Jack/status/20 || exit 1
      interval: 30s
      timeout: 5s
      retries: 2

  redis:
    image: redis:7-alpine@sha256:3b73847e72874be07e6657b129a94761662b79bc0f679273757d4218573b2a98
    restart: always
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - nitter-redis:/data
    healthcheck:
      test: redis-cli ping
      interval: 30s
      timeout: 5s
      retries: 2

  anubis:
    container_name: anubis-nitter
    image: ghcr.io/techarohq/anubis:latest@sha256:04d7d67f1d09e8fa87ba42108f920eb487bb75b43922a009ea87bbcf1b5b5c0b
    environment:
      BIND: ":8923"
      DIFFICULTY: "3"
      METRICS_BIND: ":9090"
      SERVE_ROBOTS_TXT: "false"
      TARGET: "http://nitter:8080"
    volumes:
      - /home/ubuntu/anubis/botPolicy.json:/data/cfg/botPolicy.json:ro
    user: "1000:1000"
    restart: always
    networks:
      - web
      - default
    depends_on:
      - nitter

volumes:
  nitter-redis:

configs:
  nitter:
    file: /home/ubuntu/nitter/nitter.conf
